{"version":3,"file":"component---src-pages-index-js-ee9f3768fece4be0f8da.js","mappings":"qIA2DA,IApDe,IAA8B,IAA7B,UAAEA,EAAS,SAAEC,GAAU,EACrC,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAY5B,OACE,uBAAKC,UAAU,eACb,8BACE,0BAAI,sBACJ,0BACE,0BAAI,gBAAC,KAAI,CAACC,GAAG,KAAI,SAEfH,EAAKI,kBAAkBC,MAAMC,KAAIC,GAC/B,sBAAIC,IAAKD,EAAKE,IACZ,gBAAC,KAAI,CAACN,GAAE,IAAMI,EAAKG,MAASH,EAAKI,WAO3C,4BACE,2BAAST,UAAU,QACjB,0BAAI,gDAAiD,yBAAG,4BACxD,sBAAIA,UAAU,aAAaJ,IAE7B,2BAASI,UAAU,WAChBH,IAGL,8BACE,2BACE,0BAAI,SACJ,yBAAG,qDAEL,2BACE,0BAAI,WACJ,yBAAG,qBAAGa,KAAK,0BAAyB,gDAGpC,C,mGClDV,MAuDaC,EAAO,IAAM,6BAAO,kCAEjC,UAzDkB,IAAe,IAAd,KAAEb,GAAM,EAEvB,OADJc,QAAQC,IAAIf,GAEJ,gBAAC,IAAM,CAACF,UAAU,aAClB,sBAAII,UAAU,YAENF,EAAKgB,cAAcX,MAAMC,KAAIC,IAAI,qBAC7B,sBAAIC,IAAKD,EAAKE,IACV,gBAAC,KAAI,CAACP,UAAU,WAAWC,GAAE,IAAMI,EAAKG,MAAQ,0BAAKH,EAAKU,QAC1D,uBAAKf,UAAU,cACf,uBAAKA,UAAU,QAAQgB,IAAG,GAAKX,EAAKY,MAASC,IAAG,aAAeb,EAAKU,SACzD,QAAX,EAAAV,EAAKc,cAAM,aAAX,EAAaC,SACb,uBAAKpB,UAAU,SAASgB,IAAG,IAAgB,QAAhB,EAAKX,EAAKc,cAAM,aAAX,EAAaC,QAAUF,IAAG,aAAeb,EAAKc,OAAOV,QAGrF,qBAAGT,UAAU,QAAQK,EAAKgB,OACd,QAAX,EAAAhB,EAAKc,cAAM,aAAX,EAAaV,OACZ,qBAAGT,UAAU,QAAO,cAAuB,QAAZ,EAACK,EAAKc,cAAM,aAAX,EAAaV,OAEjC,QAAb,EAAAJ,EAAKiB,gBAAQ,aAAb,EAAeb,OACd,qBAAGT,UAAU,gBAAe,gBAAC,KAAI,CAACC,GAAE,IAAMI,EAAKiB,SAASd,MAAQ,aAAWH,EAAKiB,SAASb,OAE3F,qBAAGT,UAAU,eAAeK,EAAKkB,aAChC,KAKR,C","sources":["webpack://bdrl-royal/./src/components/global/layout.js","webpack://bdrl-royal/./src/pages/index.js"],"sourcesContent":["//src/components/layout.js\n//src/components/layout.js\nimport * as React from 'react'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport './layout.css';\n\n\nconst Layout = ({ pageTitle, children }) => {\n  const data = useStaticQuery(graphql`\n        query {\n            allStrapiCategory {\n                nodes {\n                        name\n                        slug\n                        id\n                    }\n          }\n        }\n    `)\n\n  return (\n    <div className=\"pagewrapper\">\n      <header>\n        <h1>Strapi Gatsby Blog</h1>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          {\n            data.allStrapiCategory.nodes.map(node => (\n              <li key={node.id}>\n                <Link to={`/${node.slug}`}>{node.name}</Link>\n              </li>\n            )\n            )\n          }\n        </ul>\n      </header>\n      <main>\n        <section className=\"hero\">\n          <h2>Welcome to the hypest blog on the interweb. </h2><p>Checkout something cool!</p>\n          <h2 className=\"pageTitle\">{pageTitle}</h2>\n        </section>\n        <section className=\"content\">\n          {children}\n        </section>\n      </main>\n      <footer>\n        <div>\n          <h2>About</h2>\n          <p>Demo blog site using Strapi and Gatsby, Oct 2023</p>\n        </div>\n        <div>\n          <h2>Article</h2>\n          <p><a href=\"https://strapi.io/blog\">Build a Blog Site using Strapi and Gatsby</a></p>\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout","// src/pages/index.js\nimport * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/global/layout'\n\nconst IndexPage = ({ data }) => {\nconsole.log(data)\n    return (\n        <Layout pageTitle=\"Home Page\">\n        <ul className=\"postlist\">\n            {\n                data.allStrapiPost.nodes.map(node => (\n                    <li key={node.id}>\n                        <Link className=\"postlink\" to={`/${node.slug}`}><h3>{node.title}</h3></Link>\n                        <div className=\"image-wrap\">\n                        <img className=\"cover\" src={`${node.cover}`} alt={`Cover for ${node.title}`} />\n                       {node.author?.avatar &&\n                        <img className=\"avatar\" src={`${node.author?.avatar}`} alt={`Avatar for${node.author.name}`}/>\n                       }\n                        </div>\n                        <p className=\"date\">{node.date}</p>\n                        {node.author?.name &&\n                          <p className=\"name\">Written by {node.author?.name}</p>\n                        }\n                        {node.category?.name &&\n                          <p className=\"postcategory\"><Link to={`/${node.category.slug}`}>Category: {node.category.name}</Link></p>\n                        }\n                        <p className=\"description\">{node.description}</p>\n                    </li>\n                )\n                )\n            }\n            </ul>\n        </Layout>\n        )\n}\n\nexport const query = graphql`\nquery {\nallStrapiPost(sort: {date: DESC}) {\n    nodes {\n      author {\n        avatar \n        name\n      }\n      cover\n      date(formatString: \"MMMM D, YYYY\")\n      description\n      id\n      slug\n      title\n      category {\n        name\n        slug\n      }\n    }\n  }\n}\n`\n\nexport const Head = () => <title>Home Page - Strapi Gatsby Blog</title>\n\nexport default IndexPage"],"names":["pageTitle","children","data","useStaticQuery","className","to","allStrapiCategory","nodes","map","node","key","id","slug","name","href","Head","console","log","allStrapiPost","title","src","cover","alt","author","avatar","date","category","description"],"sourceRoot":""}